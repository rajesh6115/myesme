              FEATURES
---------------------------------
1. Can Bind as Tx, Rx or TRx
2. Logging of message in files
3. Configurable
4. Modulised by Job Deviding in Threads
5. Can UnBind at any Time Safely
6. Multi Campaign
7. Multi esme connection
8. Esme Operation Status Report
9. Use of SmsmtMulti for More Through put
10. Integration of thrift to ondemand services realtime
11. Auto Config From Configuration file
12. Reload of Config in REAL-TIME ONDEMAND
13. Conjection Management Logic For SubmitSm DeliverySm MaximumQueue in PDU 
14. Persitense Management
15. Esme Status Report Generation AND Alerts If Required


            WORKING FEATURES
---------------------------------------
1. Sending SMS From Campaign
2. Conjection Management
3. High tps By Independent Sender 


            TODOS
---------------------------------------
1. Better Congetion Management By Strong Resending Logic
2. NOT USE Any #define variables move threm to enums or Configuration
4. Complete MULTISM and MULTISMRESP
6. Removing all Print to console statement add Log inplace if required
7. SMS Delivery Report Checking
8. Make ESME Statefull
9. Support Outbind
11. Use Counters/Timers to Close Connection Sucessfully
--
1. Protect Dequeue of Pdus From RecivePDU Queue, As Now On wards going to be used by threads of threadpool
2. remove direct data base interaction, change logic of campaigns
        Possible Solutions Can Be --
                a. Separate Application Which will Throw From Data Base (Problem Of Queue Size may occur)
3. remove updating data base up on intermediate stages like submitsm, submitsmresp
        submitsmresp contains msgid which is important parameter for getting status of sms, So may some logic has to develope when avoiding submitsmresp data base interaction
4. std::map is not persistence, So we need a persistence map for storing intermediate states of sms
        a. shared memory
        b. mysql/sqlite MEMORY ENGINE
        c. memcache 
        d. redis
5. separating libs from main project like libsmpp and utils
6. USE OF HEXDUMP FOR LOGGING 

          HIGH PRIORITY
-----------------------------------------------------------
1. Implement hexdump in logger
2. Reconnect Logic
3. Unicode Support
4. Flash Message Support

          HIGH PRIORITY
-----------------------------------------------------------
1. Protect Dequeue of Pdus From RecivePDU Queue, As Now On wards going to be used by threads of threadpool
2. std::map is not persistence, So we need a persistence map for storing intermediate states of sms

HOW TO INSTALL
-----------------------------------------------
1. INSTALL REQUIRED PACKAGES (UBUNTU)
	# sudo apt-get install g++ libtool autoconf automake libmysqlclient-dev exuberant-ctags libxml2-dev pkg-config make
2. FORTESTING 
	# sudo apt-get install openjdk-7-jre
3. Generate Configure
	# autoreconf -i
	# ./configure --prefix=/usr
4. Make Project
	# make
5. Install Project
	# make install or sudo make install
